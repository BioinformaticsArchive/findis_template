<?php
include_once('simple_html_dom.php');
ini_set('display_errors', 'On');
error_reporting(E_ALL);
/*******************************************************************************
 *
 * LOVD to HTML table/SQL/Flat file Importer
 *
 * Created     : 2013-1-15
 * Modified    : 
 * For LOVD    : 2.0
 *
 * Copyright   : 2013 GEN2PHEN; http://gen2phen.org/
 * Programmers : Juha Muilu <juha.muilu@helsinki.fi>
 *               Myles Byrne <myles.byrne@helsinki.fi>
 *
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This tool is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 *************/
/*
#### Generating new Finnish variant downloads for LOVD2 Genes

Tab-separated Finnish variant listings are provided for the above-listed LOVD2 genes. These can be regenerated by running the lovd_tablegen.php script, found at https://github.com/findis-db, and also in the /downloads directory of the FinDis site. 

Note that the $gene and $lovd_url variables must be switched for each LOVD2 gene variant listing to be regenerated. This can be done simply by commenting and uncommenting the respective lines in the php script.

Steps:

	1. uncomment the $gene name to generate a download table for that gene.
	2. uncomment the $lovd_url address following the gene name.
	3. comment all other $gene names and $lovd_url addresses.
	4. run the script from the command line: "php lovd_tablegen.php"
	5. Copy the output into a text file
	6. Save output as GENE_NAME.tsv.txt in the FinDis /downloads folder.
	7. The updated download file should now be accessed by the download link for the given gene, on that gene's page.

##### Modifying lovd_tablegen.php

If lovd_tablegen.php does not work correctly, it can be modified fairly easily. The script is a series of regex and string replacements, using the php functions:

preg_match, preg_replace, str_replace

*/
/*
TODO:
make list of genes and LOVD URI's into array, cycle over to output HTML pages and downloads
*/

// Map gene into LOVD2 URI for Finnish variants
// For LOVD2 genes: AIRE
$gene = "AIRE";
$lovd_url = "https://grenada.lumc.nl/LOVD2/mendelian_genes/variants_overview_origin.php?order=&hide_col=&show_col=&genes%5B%5D=".$gene."&limit=25&page=1&search_Patient%2FOrigin%2FGeographic=Finland";

// For LOVD2 genes: CLRN1 (USH3), CHM (REP1)

// $gene = "CLRN1";
// $gene = "CHM";
// $lovd_url = "https://grenada.lumc.nl/LOVD2/Usher_montpellier/variants_overview_origin.php?order=&hide_col=&show_col=&genes%5B%5D=".$gene."&search_Patient%2FOrigin%2FGeographic=Finland";

// For LOVD2 genes: RS1, OAT

// $gene = "RS1";
// $gene = "OAT";
// $lovd_url = "https://grenada.lumc.nl/LOVD2/eye/variants_overview_origin.php?order=&hide_col=&show_col=&genes%5B%5D=".$gene."&search_Patient%2FOrigin%2FGeographic%5B%5D=Finland&search_Patient%2FOrigin%2FEthnic=";

$html = file_get_html($lovd_url);
$rfi = $html->plaintext;
$rfi = mb_convert_encoding($rfi, 'iso-8859-1');

// Remove unwanted elements from LOVD table innertext

$mpat = 'Variant listing [\S*\s]* entries in AIRE';
$npat = '';
$rp1 = preg_replace("/$mpat/", $npat, $rfi);

$ppat = '(Path.[\S*\s]*)Powered by LOVD';
$rp4 = preg_match("/$ppat/", $rp1, $matches);
$rp5 = $matches[1];

$awpat = ">";
$aqpat = "\>";
$rp7 = preg_replace("/$awpat/", $aqpat, $rp5);

$aw2pat = "g.";
$aq2pat = "g\.";
$rp8 = preg_replace("/$awpat/", $aqpat, $rp7);

$gqpat = "\s{4,}";
$gqtpat = "\t";
$rp9 = preg_replace("/$gqpat/", $gqtpat, $rp8);

$vpat = "(\W\/\W)";
$wpat = "\n$1";
$rp10 = preg_replace("!([+-?]\/[+-?])!", "\n$1", $rp9);


$lbpat = '>';
$rp11 = str_replace("\\>", ">", $rp10);

/* Unused, saved for reference */

// $opat = 'Powered by LOVD[\S*\s]* Medical Center';
// $rp7 = preg_replace("/$opat/", $npat, $rpmv);

//$tpat = 'Phenotype/Onset';
//$upat = "Phenotype/Onset\n";
//$rp11 = str_replace($tpat, $upat, $rp7);

/*
$jpat = ">";
$kpat = "&gt;";
$rpgd = preg_replace("/$vpat/", $kpat, $rp7);


$apat = "/(g\.\w*\>\w)(g\.\w*\>\w)/i";
$bpat = "$1\t$2";
$rp13 = preg_match_all('/(g\.\w*\>\w)(g\.\w*\>\w)/', $rp12, $matchesb, PREG_PATTERN_ORDER);
// preg_match_all('/(g.\w*\>\w)(g.\w*\>\w)/', $rp12, $matchesb);
print_r($matchesb);

$hpat = '(g.\w*\>\w)(g.\w*\>\w)';
$ipat = "$1\t$2";
$rp14 = preg_replace('/(g.\w*\>\w)(g.\w*\>\w)/', $ipat, $rp12);
*/

print "\n## Finnish variants ##\n";
echo $rp11;
?>